{"pages":[],"posts":[{"title":"firstblog","text":"hello world, this is my first blog, I do not know if this blog can work, so I just have a try.It seems like work perfectly, okay, let is begain our new way of life.","link":"/2019/07/27/firstblog/"},{"title":"Poetry Of Life","text":"这是生活中最甜美的一首诗！ 生活中遇到的每个人都是一部独一无二的书，每一本书都需要真心坦诚的读才可能会有所感悟。我的生活也是一本书，在我的书里，我希望她会是一首优美、独特的诗篇，在我读到她的诗句时，便能觉得生活是甜的！","link":"/2019/08/14/Lovelygirl/"},{"title":"从前慢","text":"从前慢—-木心记得早些少年时大家诚诚恳恳说一句 是一句 清早上火车站长街黑暗无行人卖豆浆的小店冒着热气 从前的日色变得慢车，马，邮件都慢一生只够爱一个人 从前的锁也好看钥匙精美有样子你锁了 人家就懂了","link":"/2019/07/28/从前慢/"},{"title":"Markdown学习笔记","text":"Introduction 接下来我将会以简单明了的方式介绍Markdown的语法，介绍的过程也是我学习实践的过程，这也是我第一次全文用Markdown语法书写文章，还很生疏，有些语法可能也还不太了解，所以会有翻车的现象。 Markdown 由 John Gruber 在2004年创建，至今已经是12年的时间。这门语言的宗旨是易读易写，而它的语法也确实如此，简单强大！接下来开始学习！ 基本写作1. 标题标题分为6级，如下 #一级标题 ##二级标题 ###三级标题 ####四级标题 #####五级标题 ######六级标题 效果如下 一级标题二级标题三级标题四级标题五级标题六级标题 2.强调 斜体—包括在两个 ‘’或‘_’ 之间的字符*黑体—包括在两个‘’或‘__’之间的字符删除线—包括在两个‘~~’之间的字符全部复合使用（有待补充） 3.列表 无序列表 苹果 香蕉有序列表 苹果 香蕉 4.引用引用如下 这里面是引用的内容，通过在段前添加‘&gt;’符号开始引用段落，在此段后空一行即结束引用，在段落间使用 这是嵌套引用 这也是 5.代码 print 'Hello world' 在两个反引号‘`’之间为行内代码 12def function(x): return x^2 在连用三个反引号‘`’之间的符号为代码区块，如上所示 6.分割线 如下（连续三个或以上‘*’），即表示分割线 或者如下（空一行，连续三个或以上‘-’） 7.表格通过如下方式可以渲染出表格 12345|table|head|here||:-----|:-----:|-----:||content1|content2|content3||content1|content2|content3||content1|content2|content3| 效果如下 table head here content1 content2 content3 content1 content2 content3 content1 content2 content3 ### 8.图片 ![Von Gogh](./Markdown简易教程/Von_Gogh.jpg) 就是上面这段格式的代码就是引用了这张梵高的图片了，注意的是其中的图片的地址，这个是同级目录下的直接引用，属于相对目录，也可以用绝对路径，不管相对还是绝对，路径一定要准确，这样才能定位到需要引用的图片上，才能展示出来 9.链接 链接就是比上面的图片的引用少了前面的‘！’，去掉这个感叹号后，再把需要的链接URL放在后面的括号里就可以了[My github page site](https://genening.github.io) My github page site或者百度首页 10.公式 公式的展示是采用LaTeX的语法，通过这个网站可以把公式对应的LaTeX的写法转换出来 如下为行内公式 $E=mc^2$对应 $E=mc^2$ 有待尝试 如下为公式块 1234$$e^{i\\theta} = \\cos \\theta +i\\sin \\theta \\e^z = 1 + \\frac{z}{1!} + \\frac{z^2}{2!} + \\frac{z^3}{3!} + \\cdots = \\sum_{n=0}^{\\infty}\\frac{z^n}{n!}$$ 效果出不来，比较尴尬 11.反斜线 如果想插入一些特殊字符的话需要转义符号反斜线‘\\’，引入这个反斜线后，就可以使用上面的那些特殊的字符了，这样不会触发对应的渲染效果 \\反斜线`反引号*星号_底线{}花括号如上符号等等 12.脚注脚注可以用于编辑参考文献 在文中使用[^1]的方式标记脚注 在文末使用[^1]:加入参考文献，注意要使用英文冒号，后面有无空格均可 效果如此[^1]，或者是参考文献[^1]: 此处尝试又出bug了，接着完善 结语Markdown是所谓的轻量标记语言(lightweight markup language)，它可以让我们在写文章的时候专注于写作本身，而不用费心于排版，这种思想和LaTeX的思想不谋而合。现在很多网站都支持Markdown，也有很多相应的编辑软件，例如Typora，这是个很好用的Markdown的编辑软件。另外，让Markdown更强大的是，Markdown支持直接插入HTML的语法，也能插入LaTeX的语法，这样的扩展能力，让Markdown即满足了轻便易用的基础上，进一步增强了能力，这也是Markdown现在炙手可热的原因之一。","link":"/2019/08/29/Markdown学习笔记/"},{"title":"以梦为马","text":"——海子从明天起，做一个幸福的人喂马、劈柴，周游世界 从明天起，关心粮食和蔬菜我有一所房子，面朝大海，春暖花开 从明天起，和每一个亲人通信 告诉他们我的幸福 那幸福的闪电告诉我的我将告诉每一个人 给每一条河每一座山取一个温暖的名字陌生人，我也为你祝福 愿你有一个灿烂的前程 愿你有情人终成眷属 愿你在尘世获得幸福 我只愿面朝大海，春暖花开 “从明天起，做一个幸福的人”，多么美好的诗句呀，做一个幸福的人，这应该是每一个人的梦想，但是在生活的洪流里面，多数人都为了生存而疲于奔波，连生存都困难，又怎么谈得上幸福呢，但是生活总是不只有眼前的苟且，还有诗和远方，我们总是会有千千万万的理由牵绊着我们去拥抱幸福，有时候拿起来很需要勇气，但是有时候放下更需要勇气，或许有一天，我们能够放下牵绊自己的理由，下定决心，从明天起，做一个幸福的人，安静的品味自己的生活，也不枉来人间走一遭。从明天起，开始悉心的感受生活，从观察开始，发现生活中以前不曾注意的细节，说不定，生活会开始变得不一样。","link":"/2019/08/29/以梦为马/"},{"title":"404problem","text":"在8月28日晚，也就是昨晚，在更新了一些_config.yml里面的内容后，输入hexo clean &amp;&amp; hexo g &amp;&amp; hexo d指令后，出现了页面404，不管是刷新还是改其他信息，都无法解决这个问题，在看了网上很多相关博客后也没有找到问题的根源，最终还是在仔细看了GitHub的404页面的提醒，如下图 才发现，原来是GitHub的page的repository的根目录里没有了index.html文件，导致在访问https://genening.github.io时GitHub无法找到静态网页的文件，所以显示不出来，跳转到了404页面找到了问题所在之后，我就开始想办法解决了。先是查看了另外一个网站—— https://193.148.16.42的根目录的index.html文件，看看里面的内容应该是什么，然后再查看了整个目录的结构，对比我部署到GitHub的repository里面的文件目录结构，发现有很多不同，如果自己从头做一份的话很麻烦，而且hexo博客应该会自动生成，怎么会没有了呢，于是我就重新运行了一遍hew new &quot;blogname&quot;，发现hexo博客又重新生成了一遍目录，这一次目录结构就和另一份博客的目录一致了，于是我紧接着hexo clean &amp;&amp; hexo g &amp;&amp; hexo d一遍，发现GitHub上面的目录又更新了，再次访问，就能显示正常的blog页面了。具体产生这个问题的原因还不知道，不过也算是吃一堑长一智了，下次注意一些就好，而且也找到了解决问题的思路，也算是花费了我半天时间找解决办法的收获吧。故写此博客用以记录。","link":"/2019/08/29/404problem/"},{"title":"半截的诗","text":"—-海子 你是我的半截的诗，不许别人更改一个字。 简单的一句诗，却颇有一种浪漫从字里行间迸发而出，这爱热情似火，纵世界五彩缤纷，我只宠你一人；这爱始终如一，矢志不渝，你就是我的生命的另一半，我不允许别人改变你，这爱有点任性，对你，不曾更改；这爱是不言的浪漫，希望纸短情长，一句 两句，都能写进你的心坎。","link":"/2019/09/17/半截的诗/"},{"title":"hexo博客写作流程","text":"这篇文章的目的是为本博客的博文作者提供指导，介绍需要准备的工具、写作流程和发布方法。查看 Hexo 文档 了解关于博客框架的详细内容。 依赖 博文作者 nodejs - Hexo 基础 npm - Node.js 包管理器 hexo-cli - Hexo 博客框架 git - 版本控制系统 服务器 git - 版本控制系统 nginx - Web服务器 准备工作Hexo 是静态博客框架，因此每个页面在读者访问之前就已经被渲染完成，大部分的工作都落在博文作者处。Hexo 依赖 Node.js 运行时环境工作，请访问 nodejs.org 或使用包管理器获取 Node.js，同时安装其包管理器 npm。随后即可使用 npm 安装 Hexo，建议设置为全局安装： 1$ npm install -g hexo-cli 想起来了就升级一下所有包，获取安全和功能更新： 1$ npm update -g 为方便部署，我们使用 git 执行版本控制，访问 git-scm 或使用包管理器安装 git。博客的配置和源文件仓库都保存在服务器上，要同步不同作者的更改或从新环境开始，可 merge 或 clone 博客仓库以得到工作区。 Hexo 使用 Markdown 创作博文，因此建议使用带有 Markdowm 预览的编辑器。准备工作结束之后，就能开始愉快地写作了。 流程 新建页面 1$ hexo new [layout] [option] &lt;title&gt; 在制定布局的基础上新建文章，可用选项有 Option Description -p, --path 自定义文章路径 -r, --replace 覆盖指定博文 -s, --slug 自定义文章URL 写博文 使用 Markdown 撰写文章，但不限于 Markdown 的语法。可以使用 HTML 元素实现更灵活的布局，同时通过 Hexo 插件得到例如资源文件夹管理等更强大的功能。 博客写作的高级功能包括： MathJax 数学公式支持 使用 $ LaTex $ 插入行内公式，$$ LaTex $$ 插入行间公式。 资源文件夹管理 资源文件夹管理是成为正式组件的社区插件之一，在需要插入图片的地方使用一下格式引用资源文件夹 JavaScript1{% asset_img 文件名 文件描述 %} 插入页面目录 在 Front-matter 中指定 1toc: true Hexo 将在指定位置渲染页面目录，方便长文章的浏览。 发布 写作完成后，使用以下命令发布到服务器： 1$ hexo g -d 这会让 Hexo 渲染所有页面，并使用 git 将网页文件推送至远程的 publish 分支。在服务器上，git hooks 会在接收推送后自动将其复制到 nginx 的根目录，可以立即在博客上查看更改。 注意直接部署并不会推送博客配置文件以及文章源文件，要备份整个工作区，请手动推送 master 分支到服务器，这个过程与部署过程相独立。","link":"/2019/08/29/博客写作流程/"},{"title":"发呆","text":"发呆—-我站在阳台向下看风抚着白千层的枝条摇曳阳光洒在阳台的仙人掌上金色的绒毛，像极了 发呆只有耳边的旋律冬日的阳光慵懒着，宠溺不想动只愿被光融化了飘散到小草 大树 行人身上留下一丝温热那就好了 这是在刚入大学时候，在宿舍写得诗，是的，这是一首诗，是我生活的诗，它看起来不美，但是足够敲打我的心弦。有时候，真感激当初的自己，在奔涌向前的时光流水里，留下了一只小纸船，让我能够在今后的某一天，回头时，能窥见自己当初的样貌。以前看着真傻，看着真好。","link":"/2019/07/28/发呆/"},{"title":"偶然","text":"偶然—-徐志摩 我是天空里的一片云， 偶尔投影在你的波心。 你不必讶异，更无须欢喜， 在转瞬间消灭了踪影。 你我相逢在黑夜的海上， 你有你的，我有我的，方向； 你记得也好，最好你忘掉， 在这交会时互放的光亮！ 我是一片云，曾走近你的心，但是我是云，远隔万里，随风而动，最终，又飘离了你的心，不奢求天长地久、海枯石烂，但是至少曾经美好的爱过，所以你我不必为此惆怅难过，我们曾经一起度过一段最美好的时光，这是你我回忆里的光辉，你若记得，那也好，但是，你最好忘了吧，从现在开始拥抱着你的新生活，不用担心这份美好会在时光的长河里淹没，因为我一直铭记心中，不曾丝毫遗忘褪色。 这首诗是徐志摩与林徽因在欧洲别离又在国内相遇时作的诗。徐志摩与林徽因曾经是恋人，但是再次相遇时，林徽因已经嫁给梁思成为人妻了，正所谓“物是人非事事休，未语泪先流。”，不过虽然如此，徐志摩还是写下了这首诗送给了林徽因。","link":"/2019/09/05/偶然/"},{"title":"怀想","text":"---汪国真 我不知道 是否 还在爱你 如果爱着 为什么 会有那样一次分离 我不知道 是否 早已不再爱你 如果不爱 为什么记忆没有随着时光 流去 回想你的笑靥 我的心 起伏难平 可恨一切 都已成为过去 只有婆娑的夜晚 一如从前 那样美丽","link":"/2019/08/14/怀想/"},{"title":"思念","text":"思念—-汪国真我叮咛你的你说不会遗忘你告诉我的我也全都珍藏对于我们来说记忆是飘不落的日子——永远不会发黄 相聚的时候总是很短期待的时候总是很长岁月的溪水边捡拾起多少闪亮的诗行如果你要想念我就望一望天上那闪烁的繁星有我寻觅你的目——光 “我叮咛你的 你说不会遗忘 你告诉我的 我也全都珍藏” 相遇、相知、相恋，这是一个多么美妙的过程呀，你我之间的互动，充满了恋人之间的不用言说的默契，只是一个眼神相遇，那便是千言万语，在彼此心里浮现，这就是恋人间所谓的心有灵犀吧！“记忆是飘不落的日子 永远不会发黄”，这一句里用了暗喻的手法，把记忆与叶子相互比喻，记忆不飘落，永远在树上，那便是常青于树上，所以不会发黄，也就是不会遗忘。说到这里，美好记忆永存也是很多人的共同愿望，但是，会不会永存呢？时间会告诉我们答案。","link":"/2019/08/01/思念/"},{"title":"我想和你虚度时光","text":"我想和你虚度时光—-李元胜我想和你虚度时光，比如低头看鱼比如把茶杯留在桌子上，离开浪费它们好看的阴影我还想连落日一起浪费，比如散步一直消磨到星光满天我还要浪费风起的时候 坐在走廊发呆，直到你眼中的乌云全部被吹到窗外我已经虚度了世界，它经过我疲惫，又像从未被爱过但是明天我还要这样，虚度满目的花草，生活应该像它们一样美好一样无意义，像被虚度的电影那些绝望的爱和赴死为我们带来短暂的沉默我想和你互相浪费 读到这首诗的时候，闭上眼，仿佛能够感受到阳光烘焙着空气的留下的淡淡暖意，空气中弥漫着一种慵懒的气息。她坐在窗边，头枕着手趴在桌子上，我坐在对面，安静的看着她，就是安静的看着，听着彼此的呼吸声、心跳声，不说话，然后目光相遇、对视、凝望，柔情暖意似水般涌动跳跃，此时墙壁上的挂钟滴答滴答的规律的跳动着，时间从指缝间溜走，就这么溜走，心甘情愿的让它跑了。我们就是这么对视着，不说话，但又好像说了很多话，一直在说话","link":"/2019/07/28/我想和你虚度时光/"},{"title":"是否","text":"——汪国真是否 你已把我遗忘不然为何 杳无音信天各一方是否 你已把我珍藏不然为何 微笑总在装饰我的梦 留下绮丽的幻想 是否 我们有缘 只是源头水尾 难以相见 是否 我们无缘 岁月留给我的将是 愁绪萦怀 寸断肝肠 汪国真的这首诗情人相隔远方，思念无法排遣的愁绪填满了字里行间，当诗句一句句映入脑海，似乎能够看见那相思柔情，这等柔情是凄美的，也是许多人所经历的，我虽然觉得诗词美，但终究是写的露骨，少些含蓄，在这一方面有所考究的话，或许能更符合我的喜好。“问世间情为何物，直教人生死相许”，难呀！ 今天重新部署了一下博客，换成了在Windows中写，这样就不用登录服务器了，而且还尝试了hexo-admin这个插件，可以直接在网页上写博文，现在先试试效果怎们样，测试一下！","link":"/2019/08/26/是否/"},{"title":"夏天的太阳","text":"夏天的太阳—-海子活在这珍贵的人间太阳强烈水波温柔一层层白云覆盖着我踩在青草上感到自己是彻底干净的黑土块活在这珍贵的人间 泥土高溅扑打面颊活在这珍贵的人间人类和植物一样幸福爱情和雨水一样幸福 在读过木心、汪国真的诗后，和海子的诗对比，木心先生的诗显得淡雅精致，读起来就像是在品一杯淡茶；汪国真的诗韵律巧妙，读起来就像是一首歌曲，抑扬顿挫。木心先生和汪国真先生也写感情，木心先生淡雅，汪国真先生则是直抒胸臆。看海子的诗，有种虽然没有木心先生的淡雅滋味，但是也不会像汪国真先生的开门见山，独有一份自己感受生活、抒发感情的态度与章法，可以说，我可能更喜欢海子的诗词，一种我能够品尝到，但是又不至于像汪国真先生诗词那样浓郁的爱意。另外，海子的诗应该更多的是对生活细节的体验，像一个可以触及的平常人，显得真实，但是在海子的笔触下又能写的出让人心血澎湃的感人诗句，平常之中孕育着不凡的灵魂。","link":"/2019/08/30/夏天的太阳/"},{"title":"哪有你这样你","text":"哪有你这样你—-木心十五年前阴凉的晨 恍恍惚惚清晰的诀别 每夜，梦中的你梦中是你 与枕俱醒觉得不是你 另一些人扮演你入我梦中 哪有你，你这样好哪有你这样你","link":"/2019/07/27/机器学习名词解释/"},{"title":"爱情是棵树","text":"爱情是棵树—-木心我是锯子上行 你是锯子下行 合把那树锯断两边都可见年轮一堆清香的屑锯断了才知爱情是棵树树已很大了 第一次读到这首诗的时候，是大一了，不过并没有读懂，直到现在也没有读懂，倒是颇为好奇，这拿锯子锯树的方式到底是两个人拉着一把锯子，上下行的合作锯树呢，还是，两个人各拿着一把锯子，在树的两侧锯着，这两种方式都符合诗中的描述，所以我确实有些疑惑，不知道是哪种理解好，如果是第一种，倒是比较好理解，两人共同生活，共同为爱情负责嘛，力总是相互的，所以锯子一来一去，树倒了不是个人的责任，两者都是要负责的。但是，如果是第二种状况，那就可能是一方快些、多些，另一方慢些、少些，毕竟两把锯子，说以完全一样，那是不实际的。所以这个疑惑让我有些难以理解诗，不过，这个关注点确实有点剑走偏锋了。","link":"/2019/08/01/爱情是棵树/"},{"title":"JS学习笔记","text":"第一部分：JS介绍及基础知识 目录 初识JavaScript 变量和常量的知识 基本数据类型 运算符 基本数据类型间的转换 流程控制语句 1. 初识JavaScript概述： JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。 javascript组成 （1）ECMAScript，描述了该语言的语法和基本对象。（2）文档对象模型（DOM），描述处理网页内容的方法和接口。（3）浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口 应用 （1）嵌入动态文本于HTML页面。（2）对浏览器事件做出响应。（3）读写HTML元素。（4）在数据被提交到服务器之前验证数据。（5）检测访客的浏览器信息。 （6）控制cookies，包括创建和修改等。（7）基于Node.js技术进行服务器端编程。 2. 变量与常量认识引入 javascript的引入有三种方式:（1）写在标签内（2）使用&lt;script&gt;&lt;/script&gt;标签（3）独立js文件，使用link引入 123456789101112标签内&lt;style type=\"text/css\"&gt; #div {background-color:red;} //#是id标签 .p {color:blue;} //'.'是class类标签&lt;/style&gt;script标签&lt;scipt tpye=\"text/javascript\"&gt;js语句&lt;/script&gt;引入&lt;script src=\"\" type=\"text/javascript\"&gt;&lt;/script&gt;&lt;link href=\"https://...\" rel=\"stylesheet\"&gt; 标识符与关键字 第二部分：jsDOM操作 目录 属性、文本操作 css操作 对象与数组 面向对象编程","link":"/2019/09/07/JS学习笔记/"},{"title":"初相遇","text":"—-席慕蓉 美丽的诗和美丽的梦一样 都是可遇不可求的 常常在最没料的时刻里出现 我喜欢那样的梦 在梦里，一切都可以重新开始 一切都可以慢慢解释 心里甚至还能感觉到所有被浪费的时光 竟然能够重回时的狂喜和感激 胸怀中满溢着幸福 只因为你就在我眼前 对我微笑 一如当年 我真喜欢那样的梦 明明知道你已为我跋涉千里 却又觉得芳草鲜美 落英缤纷 好像你我才初相遇 >第一次相遇，或许未曾察觉到你我之间将会有一段美好的故事，就像是无数的其他平凡的相遇——相遇 擦肩 遗忘，但这不是你我的剧本，我们会有不一样的邂逅，然后铭记彼此。也许在许多年以后，我们已经走进了生活的五光十色里，彼此再相遇，这一次，我们是否会像初相遇时，再一次目光相遇，便已察觉到，我们故事——未完待续。","link":"/2019/09/13/初相遇/"},{"title":"暮色","text":"—-席慕蓉 在一个年轻的夜里 听过一首歌 清冽 缠绵 如山风拂过百合 再渴望时 却声息寂灭 不见踪迹 亦无来处 空留那月光沁人肌肤 而在而十年后的一个黄昏里 有什么是与那夜相似 进而使那旋律翩然来临 山鸣谷应 直逼我心 回顾所来径啊 苍苍横着的翠微 这半生的坎坷啊 在暮色中 竟化为甜蜜的热泪 >青春易逝，当人至暮年，回首数十年前的风华正茂，不知道是什么感想，从席慕蓉的诗来看，似乎每当暮年回顾年轻的夜总是甜的，令人感叹的，值得珍惜的，可能也是这样的，在人文主义的角度看来，人的体验是神圣的，这是人生命意义的来源，因此不管在年少时经历过什么风雨，当人至暮年，即将走向生命的终点站的时候，这一切都是这一生意义的来源，都应该是值得感悟的经历。在这样一个年纪，伴随着荷尔蒙的分泌，或是激情四射，或是思绪萦绕，这一切都是青春的味道，这样的味道是值得人去铭记一生的，值得人去反复品味的。这让我想起了《钢铁是怎么炼成的》里的一段话，当人至暮年时，你会怎么看待你的人生呢？怎样的人生才能够让你无悔呢？才能够让你觉得没有白来人间走一遭呢？这是个值得思考的问题，我仍需多思考思考。","link":"/2019/09/14/暮色/"},{"title":"陪伴","text":"陪伴我一辈子走过许多地方的路，行过许多地方的桥，看过许多次数的云，喝过许多种类的酒，却只爱过一个正当最好年龄的人。 —-沈从文 这是在今天出门随意走走时看到的一幅画面，两个耄耋老人随步履蹒跚，但却互相依靠、陪伴，这不禁让我心中涌起一股暖意，正如沈从文先生所说，一生只爱过一个正当最好年龄的人，一生之爱，一生陪伴，或许老人们并不曾谈及爱情，但是相濡以沫之情充溢着画幅，陪伴是最长情的告白！","link":"/2019/08/09/陪伴/"},{"title":"数据结构与算法","text":"写在前面 这是篇为了记录计算机基础知识学习笔记的博客，希望自己能够充分利用博客这个工具，提高自己的学习效率和改善学习效果。另外，这也是在接下来的计算机二级考试的备考内容之一。这会是一篇持续更新的博客，希望能够写得完善一些。 1. 什么是算法？ 算法是指对解决方案的准确而完整的描述，简单来说，就是解决问题的步骤。 基本特征 具体描述 可行性 步骤可以实现，执行能够达到预期目的 确定性 步骤明确，每一步意义清晰 有穷性 有限步骤，有限时间内能完成 算法的复杂度 时间复杂度：执行算法所需要的计算工作量 空间复杂度：执行算法需要的内存空间 2. 数据结构的基本概念（1）什么是数据结构？ 数据结构值得是相互有关联的数据元素的集合。 逻辑结构 存储结构 （2）数据结构的表示1234B = (D, R)B表示数据结构D是数据元素的集合R是数据各元素之间的关系 基本概念 含义 根节点 数据结构中没有前件的节点 叶子节点 没有后件的节点 内部节点 除了根节点和叶子节点外的节点 ### （3）线性结构与非线性结构 基本概念 含义 —- —- 线性结构 非空，每一个节点最多有一个前件和一个后件 非线性结构 非空，每一个节点可以有多于一个前件或后件的数据结构 3. 线性表及其顺序储存结构（1）线性表 线性表即线性数据结构，表示如下 1(a1, a2, a3, ...,ai,...,an) 通常，线性表可以采用顺序存储和链接存储两种存储结构|基本概念|含义||—-|—-||顺序存储|存储地址是连续的、相邻的||链接存储|存储地址可以不连续，不过在逻辑上是连续的，由头指针和尾指针进行定位| 采用顺序存储是表示线性表最为简单的方法，这种顺序表示的线性表也称顺序表 4. 栈（Stack）与队列（Queue）(1)栈及其基本运算 栈是一种特殊的线性表，先进后出、后进先出原则，操作有三：入栈、退栈、读栈 （2）队列及其基本运算 队列也是一种特殊的线性表，先进先出、后进后出，运算多为指针头移动 循环队列：即最后一个元素的指针将指回第一个元素前一个空元素的位置，导致前后相连。 5. 线性链表（1）线性链表的基本概念 线性链表是指在线性表的链式存储结构，简称链表。占用空间除了数据域，还有指针域，故而会比较多空间。一般链表为单向链表，但是如果在每一项之中添加一个指向前一个元素的指针，那就可以变成双向链表。 类型 优点 缺点 顺序表 （1）可以随机存取表中任意节点（2）地址顺序即逻辑顺序，无需额外空间 （1）插入和删除的运算效率低下（2）储存空间不便于扩展（3）不便于储存空间动态分配 链表 （1）插入、删除只需移动指针，无需移动储存位置（2）空间易扩展，方便动态分配空间 需要额外的空间储存逻辑关系，存储密度比顺序表低 （2）循环链表 在单链表的第一个节点前增加一个表头节点，队头指针指向表头节点，最后一个节点的指针域的值由NULL改为指向表头节点，这样就形成了一个循环链表。 在循环链表中，只要知道了一个节点的位置，就可以从它出发访问到所有的节点，并且在链表为空时，链表中仍然还有表头节点这个节点，因此能够当成非空链表运算，因此统一了空链表与非空链表的运算。 6. 树与二叉树（1）树的基本概念 树（Tree）是一种简单的非线性结构。例如家族族谱关系等。 基本概念 含义 例子 父节点 在树结构中，每一个节点只有一个前件，即它的父节点，所有节点最终的父节点为根节点。 如从一棵树的所有枝丫都发源于树干，树干有个根。 子节点 每个节点可以有多个后件，这些后件即为子节点，没有后件的节点称为叶子节点 正如树的叶子是树的结构的末端，其后没有其他节点了 度 一个节点拥有的后件的个数称为该节点的度，所有节点中最大的度即为该树的度（注意，后件的后件不是该节点的后件）。 例如树的各个枝丫上有数量不同的枝丫或者树叶，这个数量就是目前枝丫的度 深度 定义根所在的层次为1，其他节点所在层次等于它的父节点所在层次+1，树最大的层次即为树的深度 如果从根算起，最多共经过4次转折到达了叶子的节点，那么这棵树的深度即为4+1=5 子树 在树中，以某一个节点为根构建的新的树，称为该树的子树 相当于树上的大树枝，如果把大树枝看成是起点的话，那这个构建的新的树就是原来树的子树 （2）二叉树 二叉树与树不同，但是与树的结构很相似。（我个人觉得，二叉树就是一种特殊的树结构） 特点如下 可以为空，空的二叉树没有节点，非空的二叉树有且只有一个根节点。 每个节点最多有两棵子树，即不存在度大于2的节点。 子树有左右之分，次序不能颠倒。 性质如下 在二叉树的第k层上最多有2^(k-1)个几点，k大于等于1。 深度为m的二叉树，最多有2^m-1个节点（比如深度为4的树最多有2^4-1=16-1=15个节点）。 任何一棵树，其中度为0的叶子节点总是比度为2的节点的数量多1个（可以自己分类讨论进行验证）。 具有n个节点的二叉树，其深度至少为n对2取对数运算的整数部分（记为d），则深度至少为d+1,即相当于是2^d-1=n。 具有n个节点的完全二叉树的深度为d+1（d含义同上）。 满二叉树是指除了最后一层外，其他层的节点都是度为2的节点。完全二叉树是指除了最后一层外，每一层的节点数均达到最大值，在最后一层上只缺少右边的若干节点的二叉树。 （3）二叉树的存储结构 在计算机中，二叉树通常采用链式存储结构。其存储的节点由数据域与指针域两部分组成，由于每一个节点可以有两个后件，所以每个节点需要有2个指针，分别为左指针域和右指针域。二叉树的链式存储结构也叫二叉链表。 遍历方法 含义 前序遍历 首先访问根节点，然后按照先左后右的原则一直访问到叶子节点，例子如下图前序遍历，遍历顺序为A B D H E I C F G。 中序遍历 首先遍历左子树，然后访问根节点，最后遍历右子树。例子如下图，遍历顺序为H D B E I A C G F。 后序遍历 先左子树，后右子树，最后根节点。如下图，遍历顺序为H D I E B G F C A。 7. 查找技术 概念 含义 分析 顺序查找 从线性表的第一个元素开始，逐个比较最终找出目标元素，查找停止 （1）最好的时候，第一个即为查找元素，比较次数为1。（2）最坏情况，最后一个才是目标元素，比较次数为n。综上，平均为(n+1)/2 二分法查找 在有序的线性表中，将查找元素与中间元素进行比较，以指数级速度缩小查找范围，最终锁定目标元素。 最好情况为比较1次，最差情况为比较log..n次（‘..’表示数字‘2’）。 8. 排序技术 概念 含义 分析 冒泡排序法 通过两两相邻的数据之间比较，不断调整大小顺序，不断的重复，直到所有的数据都有序为止 最坏情况，比较次数为(n-1)n/2 快速排序法 在待排序元素中选取一个数K（一般为第一个数），以K为标准，大于K的排在K后面，小于K的排在K前面，得到两个子表，对这两个子表进行同样的操作，直到所有的数均有序后停止。 最坏情况，比较次数为(n-1)n/2 简单插入排序法 把待排序的n个元素看成是有序表和无序表，最开始有序表只有1个元素，无序表有n-1个元素，接下来在无序表中选取元素插入有序表中的正确位置，重复操作直到所有元素都插入到了正确的位置即停止。 最多比较(n-1)n/2次 希尔排序 将n个元素分为a1个组（a &lt; n），在每一组之间进行简单排序，再将序列分为a2个组（a2 &lt; a1），重复操作，直到最后an=1，即只有一个分组时排序完成。 最多次数为n^r，其中（1&lt; r &lt; 2）。 简单选择排序法 先选出最小元素与第一个元素交换位置，剩下元素再找最小元素与第二个元素交换位置，直到所有排序完毕。 最多比较(n-1)n/2次 堆排序法 堆是一个比较特别的完全二叉树的结构，在这种特殊情况下进行特殊排序，称为堆排序法。 最多nlog..n次，其中‘..’表示数字‘2’。 堆是用数组表示的二叉树，在堆里面，只有数组元素的排列顺序，没有额外的逻辑数据，在某些条件下，堆的优势很明显。 结语 写到这，关于数据结构与算法的基础入门知识就是这些了，还有一些其他内容还要进一步学习。","link":"/2019/09/03/数据结构与算法/"}],"tags":[{"name":"Try new thing","slug":"Try-new-thing","link":"/tags/Try-new-thing/"},{"name":"生活的诗","slug":"生活的诗","link":"/tags/生活的诗/"},{"name":"博客建设","slug":"博客建设","link":"/tags/博客建设/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"js学习","slug":"js学习","link":"/tags/js学习/"},{"name":"数据结构与算法","slug":"数据结构与算法","link":"/tags/数据结构与算法/"}],"categories":[{"name":"log","slug":"log","link":"/categories/log/"},{"name":"Poetry with Life","slug":"Poetry-with-Life","link":"/categories/Poetry-with-Life/"},{"name":"Tech_learning","slug":"Tech-learning","link":"/categories/Tech-learning/"},{"name":"计算机基础","slug":"计算机基础","link":"/categories/计算机基础/"}]}